/*
 * Copyright 2017 Greg Methvin
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package play.javadsl.functional

import javax.inject._

import play.api.http.HttpConfiguration
import play.api.routing.Router.Routes
import play.api.routing.sird._
import play.api.routing.{Router, SimpleRouter}

class TestRouter @Inject()(testController: controllers.TestController) extends SimpleRouter {
  // Using SIRD here for convenience, but this is similar to what would get generated by the routes compiler
  override def routes: Routes = {
    case GET(p"/") => testController.index()
    case POST(p"/echo") => testController.echo()
  }
}

@Singleton
class TestRoutesProvider @Inject()(playSimpleRouter: TestRouter, httpConfig: HttpConfiguration)
    extends Provider[Router] {
  lazy val get = playSimpleRouter.withPrefix(httpConfig.context)
}
